# 'repo sync' run from a feature branch in the main repository,
# when trunk is checked out in another worktree,
# and the feature branch has been merged, so it should be deleted.
#
# https://github.com/abhinav/git-spice/issues/665

as 'Test <test@example.com>'
at '2025-05-31T16:07:08Z'

# setup
mkdir repo
cd repo
git init
git commit --allow-empty -m 'Initial commit'
gs repo init

# set up a remote
shamhub init
shamhub new origin alice/example.git
git push origin main

# set up user
shamhub register alice
env SHAMHUB_USERNAME=alice
gs auth login

# start working on a feature
git add feat1.txt
gs bc -m 'feature 1' feat1
gs bs --fill

# check out trunk in another worktree
git worktree add ../wt1 main

# update the remote out of band
cd ..
shamhub clone alice/example.git fork
cd fork
cp $WORK/extra/feat2.txt feat2.txt
git add feat2.txt
git commit -m 'Add feature 2'
git push origin main

# merge feat1 server-side
shamhub merge alice/example 1

# sync the original repo
cd ../repo
gs repo sync
stderr 'INF main: pulled 3 new commit\(s\)'
stderr 'INF feat1: #1 was merged'
stderr 'WRN main: checked out in another worktree \(.+/wt1\), will detach HEAD'
stderr 'WRN Use ''gs branch checkout'' to pick a branch and exit detached state'
stderr 'INF feat1: deleted \(was [a-f0-9]+\)'

-- repo/feat1.txt --
feature 1

-- extra/feat2.txt --
feature 2
