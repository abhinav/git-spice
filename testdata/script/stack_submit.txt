# submit a stack of PRs with 'stack submit'.

as 'Test <test@example.com>'
at '2024-04-05T16:40:32Z'

# setup
cd repo
git init
git commit --allow-empty -m 'Initial commit'

# set up a fake GitHub remote
gh-init
gh-add-remote origin alice/example.git
git push origin main

# create a stack:
# main -> feature1 -> feature2 -> feature3
git add feature1.txt
gs branch create feature1 -m 'Add feature 1'
git add feature2.txt
gs branch create feature2 -m 'Add feature 2'
git add feature3.txt
gs branch create feature3 -m 'Add feature 3'

# submit the entire stack from the middle.
git checkout feature1
gs stack submit --fill
cmpenv stderr $WORK/golden/submit-log.txt

gs ls -a
cmp stderr $WORK/golden/ls.txt

gh-dump-pull
cmpenvJSON stdout $WORK/golden/start.json

# Merge the bottom PR, sync, restack, and submit.
gh-merge alice/example 1
gs rs
stderr '#1 was merged'
gs sr   # stack restack
gs ss   # stack submit
stderr 'Updated #2'
stderr 'Updated #3'

gh-dump-pull
cmpenvJSON stdout $WORK/golden/pr-1-merged.json


-- repo/feature1.txt --
This is feature 1
-- repo/feature2.txt --
This is feature 2
-- repo/feature3.txt --
This is feature 3

-- golden/submit-log.txt --
INF Created #1: $SHAMHUB_URL/alice/example/change/1
INF Created #2: $SHAMHUB_URL/alice/example/change/2
INF Created #3: $SHAMHUB_URL/alice/example/change/3
-- golden/start.json --
[
  {
    "number": 1,
    "state": "open",
    "title": "Add feature 1",
    "body": "",
    "html_url": "$SHAMHUB_URL/alice/example/change/1",
    "head": {
      "ref": "feature1",
      "sha": "8526d1a7195abb635f28bc93155b9155b76f3881"
    },
    "base": {
      "ref": "main",
      "sha": "ece8ed7bb81d74cb6787309fa41b7deb2e0558a3"
    }
  },
  {
    "number": 2,
    "state": "open",
    "title": "Add feature 2",
    "body": "",
    "html_url": "$SHAMHUB_URL/alice/example/change/2",
    "head": {
      "ref": "feature2",
      "sha": "9806160f3b27dbff81e496260d26fc32f5ee5cf0"
    },
    "base": {
      "ref": "feature1",
      "sha": "8526d1a7195abb635f28bc93155b9155b76f3881"
    }
  },
  {
    "number": 3,
    "state": "open",
    "title": "Add feature 3",
    "body": "",
    "html_url": "$SHAMHUB_URL/alice/example/change/3",
    "head": {
      "ref": "feature3",
      "sha": "63b2d337c8172c9f79aec9c760efc95e3c0c8472"
    },
    "base": {
      "ref": "feature2",
      "sha": "9806160f3b27dbff81e496260d26fc32f5ee5cf0"
    }
  }
]

-- golden/pr-1-merged.json --
[
  {
    "number": 1,
    "state": "closed",
    "merged": true,
    "title": "Add feature 1",
    "body": "",
    "html_url": "$SHAMHUB_URL/alice/example/change/1",
    "head": {
      "ref": "feature1",
      "sha": "8526d1a7195abb635f28bc93155b9155b76f3881"
    },
    "base": {
      "ref": "main",
      "sha": "59d3064874a8d0a003755556a982d1fe8adb59dc"
    }
  },
  {
    "number": 2,
    "state": "open",
    "title": "Add feature 2",
    "body": "",
    "html_url": "$SHAMHUB_URL/alice/example/change/2",
    "head": {
      "ref": "feature2",
      "sha": "18e5a5208175cd409480c2ab89588877726c1d57"
    },
    "base": {
      "ref": "main",
      "sha": "59d3064874a8d0a003755556a982d1fe8adb59dc"
    }
  },
  {
    "number": 3,
    "state": "open",
    "title": "Add feature 3",
    "body": "",
    "html_url": "$SHAMHUB_URL/alice/example/change/3",
    "head": {
      "ref": "feature3",
      "sha": "aa7889fb8c0037d05573a0d27cacfcc78c5f1ba4"
    },
    "base": {
      "ref": "feature2",
      "sha": "18e5a5208175cd409480c2ab89588877726c1d57"
    }
  }
]

-- golden/ls.txt --
    ┏━□ feature3 (#3)
  ┏━┻□ feature2 (#2)
┏━┻□ feature1 (#1) ◀
main
