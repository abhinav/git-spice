# 'branch submit' can recover previously entered commit metadata
# if a submission attempt fails.

as 'Test <test@example.com>'
at '2024-07-03T05:07:09Z'

# setup
cd repo
git init
git commit --allow-empty -m 'Initial commit'

# set up a remote repository
shamhub init
shamhub register alice
shamhub new origin alice/example.git
git push origin main
env SHAMHUB_USERNAME=alice
gs repo init
gs auth login

# prepare for submission
git add feature1.txt
gs bc -m 'Add feature1' feature1

# install a hook that will fail the submission
mkdir .git/hooks
cp $WORK/hooks/pre-push .git/hooks/pre-push
chmod 755 .git/hooks/pre-push

env ROBOT_INPUT=$WORK/robot.golden ROBOT_OUTPUT=$WORK/robot.actual

# submit; should fail
! gs branch submit
stderr 'failed to push'

# verify nothing submitted
shamhub dump changes
stdout '\[\]'

# fix the hook, try again
rm .git/hooks/pre-push
mkdir $WORK/got
gs branch submit

cmp $WORK/robot.actual $WORK/robot.golden

-- repo/feature1.txt --
Contents of feature1

-- hooks/pre-push --
#!/bin/sh

exit 1

-- robot.golden --
===
> Title: Add feature1 
> Short summary of the change
"Add feature1 to do things"
===
> Body: Press [e] to open mockedit or [enter/tab] to skip
> Open your editor to write a detailed description of the change
"This adds feature1.\nFeature1 does a thing.\nIt is very well tested.\n"
===
> Draft: [y/N]
> Mark the change as a draft?
false
===
> Recover previously filled information?: [Y/n]
> We found previously filled information for this branch.
> Would you like to recover and edit it?
true
===
> Title: Add feature1 to do things 
> Short summary of the change
true
===
> Body: Press [e] to open mockedit or [enter/tab] to skip
> Open your editor to write a detailed description of the change
{
  "want": "This adds feature1.\nFeature1 does a thing.\nIt is very well tested.\n"
}
===
> Draft: [y/N]
> Mark the change as a draft?
false
