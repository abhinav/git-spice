# Editing the order of a stack with 'stack edit'.

as 'Test <test@example.com>'
at '2024-06-22T12:24:34Z'

# set up
cd repo
git init
git commit --allow-empty -m 'Initial commit'
gs repo init

git add feature1.txt
gs branch create feature1 -m 'Add feature 1'

git add feature2.txt
gs branch create feature2 -m 'Add feature 2'

git add feature3.txt
gs branch create feature3 -m 'Add feature 3'

# Now we have:
#   main -> feature1 -> feature2 -> feature3
exists feature1.txt feature2.txt feature3.txt
gs ls -a
cmp stderr $WORK/golden/ls-before.txt

env MOCKEDIT_GIVE=$WORK/edit/give.txt MOCKEDIT_RECORD=$WORK/edit/got.txt
gs bco main
gs stack edit
cmp $WORK/edit/got.txt $WORK/edit/want.txt

gs ls -a
cmp stderr $WORK/golden/ls-after.txt

gs bco feature1
exists feature1.txt feature2.txt feature3.txt

-- repo/feature1.txt --
Feature 1
-- repo/feature2.txt --
Feature 2
-- repo/feature3.txt --
Feature 3

-- edit/give.txt --
feature1
feature2
feature3

-- edit/want.txt --
feature3
feature2
feature1

# Edit the order of branches by modifying the list above.
# The branch at the bottom of the list will be merged into trunk first.
# Branches above that will be stacked on top of it in the order they appear.
# Branches deleted from the list will not be modified.
#
# Save and quit the editor to apply the changes.
# Delete all lines in the editor to abort the operation.
-- golden/ls-before.txt --
    ┏━■ feature3 ◀
  ┏━┻□ feature2
┏━┻□ feature1
main
-- golden/ls-after.txt --
    ┏━□ feature1
  ┏━┻□ feature2
┏━┻□ feature3
main ◀
