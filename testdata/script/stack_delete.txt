# Test stack delete command - deletes all branches in a stack

as 'Test <test@example.com>'
at '2025-07-06T15:30:00Z'

# set up
cd repo
git init
git commit --allow-empty -m 'Initial commit'
gs repo init

# Test 1: Error when running on trunk branch
gs bco main
! gs stack delete --force
stderr 'this command cannot be run against the trunk branch'

git add feature1.txt
gs branch create feature1 -m 'Add feature 1'

git add feature2.txt
gs branch create feature2 -m 'Add feature 2'

# Test 2: Force flag requirement when not interactive
gs bco feature1
! gs stack delete
stderr 'use --force to confirm deletion'

# Test 3: Interactive confirmation prompt
env ROBOT_INPUT=$WORK/robot.golden ROBOT_OUTPUT=$WORK/robot.output
gs stack delete
cmp $WORK/robot.output $WORK/robot.golden

# After deletion, should be on main branch
git branch --show-current
stdout 'main'

# Verify all branches in the stack are deleted
gs ls -a
cmp stderr $WORK/golden/ls-deleted.txt

git add feature3.txt
gs branch create feature3 -m 'Add feature 3'

git add feature4.txt
gs branch create feature4 -m 'Add feature 4'

# Test 4: Force flag works without prompting
env ROBOT_INPUT= ROBOT_OUTPUT=
gs bco feature3
gs stack delete --force

# Should be on main and all branches deleted
git branch --show-current
stdout 'main'

gs ls -a
cmp stderr $WORK/golden/ls-deleted.txt

-- repo/feature1.txt --
Feature 1
-- repo/feature2.txt --
Feature 2
-- repo/feature3.txt --
Feature 3
-- repo/feature4.txt --
Feature 4
-- repo/feature5.txt --
Feature 5
-- repo/unmerged.txt --
Unmerged change

-- golden/ls-deleted.txt --
main â—€
-- robot.golden --
===
> Delete 2 branches: [y/N]
> Confirm all these branches should be deleted.
true
