# 'branch onto' is able to handle conflicts in the upstack.


as 'Test <test@example.com>'
at '2024-05-27T21:12:34Z'

# set up
mkdir repo
cd repo
git init
git commit --allow-empty -m 'Initial commit'
gs repo init

cp $WORK/extra/feature1.txt feature.txt
git add feature.txt
gs bc -m feature1

cp $WORK/extra/feature2.txt feature.txt
git add feature.txt
gs bc -m feature2
gs bco feature1

cp $WORK/extra/feature3.txt feature.txt
git add feature.txt
gs bc -m feature3

# We now have:
#
#   trunk
#    └─feature1
#       ├─feature2  # hard-dependency on feature1
#       └─feature3  # hard-dependency on feature1
#
# Create a new sibling to feature1,
# and attempt to move feature1 onto it.
#
#   trunk                 trunk
#    ├─feature0            ├─feature0
#    └─feature1      ->    |  └─feature1
#       ├─feature2         ├─feature2
#       └─feature3         └─feature3
#
# All branches will have conflicts to deal with.

gs trunk
cp $WORK/extra/feature0.txt feature.txt
git add feature.txt
gs bc -m feature0

env EDITOR=true GIT_SPICE_VERBOSE=1

gs bco feature1
! gs branch onto feature0

# feature1 conflict
stderr 'There was a conflict while rebasing'
git status --porcelain
cmp stdout $WORK/golden/conflict-status-feature1.txt

# fix feature1 conflict
cp $WORK/extra/feature1-resolved.txt feature.txt
git add feature.txt
! gs rebase continue

# feature2 conflict
stderr 'There was a conflict while rebasing'
git status --porcelain
cmp stdout $WORK/golden/conflict-status-feature2.txt

# fix feature2 conflict
cp $WORK/extra/feature2-resolved.txt feature.txt
git add feature.txt
! gs rebase continue

# feature3 conflict
stderr 'There was a conflict while rebasing'
git status --porcelain
cmp stdout $WORK/golden/conflict-status-feature3.txt

# fix feature3 conflict
cp $WORK/extra/feature3-resolved.txt feature.txt
git add feature.txt
gs rebase continue

# verify final state
git graph --branches
cmp stdout $WORK/golden/final-graph.txt

# verify contents
gs bco feature0
cmp feature.txt $WORK/extra/feature0.txt

gs bco feature1
cmp feature.txt $WORK/extra/feature1-resolved.txt

gs bco feature2
cmp feature.txt $WORK/extra/feature2-resolved.txt

gs bco feature3
cmp feature.txt $WORK/extra/feature3-resolved.txt

gs log short -a
cmp stderr $WORK/golden/list-short.txt

-- extra/feature1.txt --
foo
-- extra/feature2.txt --
foo
bar
-- extra/feature3.txt --
baz
foo
-- extra/feature0.txt --
quux

-- extra/feature1-resolved.txt --
foo
quux
-- extra/feature2-resolved.txt --
bar
-- extra/feature3-resolved.txt --
baz
-- golden/conflict-status-feature1.txt --
AA feature.txt
-- golden/conflict-status-feature2.txt --
DU feature.txt
-- golden/conflict-status-feature3.txt --
DU feature.txt
-- golden/final-graph.txt --
* 7b78153 (HEAD -> feature1) feature1
* 2e43a0c (feature0) feature0
| * a3e3d08 (feature2) feature2
|/  
| * 2ceb0a3 (feature3) feature3
|/  
* 53ec458 (main) Initial commit
-- golden/list-short.txt --
  ┌── feature1
┌─┴ feature0
├── feature2
├── feature3 ◀
main
