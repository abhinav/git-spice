# 'gs log' commands support the 'log.pushedFormat' config

as 'Test <test@example.com>'
at '2024-08-07T06:05:04Z'

mkdir repo
cd repo
git init
git commit --allow-empty -m 'Initial commit'

# set up a fake remote
shamhub init
shamhub register alice
shamhub new origin alice/example.git
git push origin main

env SHAMHUB_USERNAME=alice
gs auth login

gs repo init

# create a stack: feat1 -> feat2 -> feat3
gs bc feat1 -m 'feat1'
gs bc feat2 -m 'feat2'
gs bc feat3 -m 'feat3'

# go back to feat1 and submit it
gs bco feat1
gs branch submit --fill

# log without the spice.log.pushedFormat option.
git config spice.log.pushedFormat false
gs ls
cmp stderr $WORK/golden/ls-pushed-format-false.txt

gs ll
cmp stderr $WORK/golden/ll-pushed-format-false.txt

# log with the spice.log.pushedFormat option.
git config spice.log.pushedFormat true

gs ls
cmp stderr $WORK/golden/ls-pushed-format-true.txt

gs ll
cmp stderr $WORK/golden/ll-pushed-format-true.txt

-- golden/ls-pushed-format-false.txt --
    ┏━□ feat3
  ┏━┻□ feat2
┏━┻■ feat1 (#1) ◀
main
-- golden/ll-pushed-format-false.txt --
    ┏━□ feat3
    ┃   7b5eba4 feat3 (now)
  ┏━┻□ feat2
  ┃    562c8c6 feat2 (now)
┏━┻■ feat1 (#1) ◀
┃    ecc906e feat1 (now)
main
-- golden/ls-pushed-format-true.txt --
    ┏━□ feat3
  ┏━┻□ feat2
┏━┻■ feat1 (#1) ◀
main
-- golden/ll-pushed-format-true.txt --
    ┏━□ feat3
    ┃   7b5eba4 feat3 (now)
  ┏━┻□ feat2
  ┃    562c8c6 feat2 (now)
┏━┻■ feat1 (#1) ◀
┃    ecc906e feat1 (now)
main
