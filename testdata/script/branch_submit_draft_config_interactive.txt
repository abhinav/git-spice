# Test spice.submit.draft configuration with interactive submit
# Tests behavior when spice.submit.draft is set to true in interactive mode

as 'Test <test@example.com>'
at '2025-07-05T21:28:29Z'

# setup
cd repo
git init
git commit --allow-empty -m 'Initial commit'

# set up a fake GitHub remote
shamhub init
shamhub new origin alice/example.git
shamhub register alice
git push origin main

env SHAMHUB_USERNAME=alice
gs auth login

# Set spice.submit.draft to true
git config spice.submit.draft true

env ROBOT_INPUT=$WORK/robot.golden ROBOT_OUTPUT=$WORK/robot.actual

# Test case 1: interactive submit without any flags
# should prompt with draft=true as default due to config
git add feature1.txt
gs bc -m 'Add feature1' feature1
gs branch submit
stderr 'Created #'

shamhub dump change 1
cmpenvJSON stdout $WORK/golden/draft-default.json

# Test case 2: interactive submit with --no-draft flag
# should not prompt and create non-draft PR
git add feature2.txt
gs bc -m 'Add feature2' feature2
gs branch submit --no-draft
stderr 'Created #'

shamhub dump change 2
cmpenvJSON stdout $WORK/golden/draft-override.json

# Test case 3: interactive submit with --draft flag
# should not prompt and create draft PR
git add feature3.txt
gs bc -m 'Add feature3' feature3
gs branch submit --draft
stderr 'Created #'

shamhub dump change 3
cmpenvJSON stdout $WORK/golden/draft-explicit.json

cmp $WORK/robot.actual $WORK/robot.golden

-- repo/feature1.txt --
Contents of feature1

-- repo/feature2.txt --
Contents of feature2

-- repo/feature3.txt --
Contents of feature3

-- robot.golden --
===
> Title: Add feature1 
> Short summary of the change
"Add feature1"
===
> Body: Press [e] to open mockedit or [enter/tab] to skip
> Open your editor to write a detailed description of the change
""
===
> Draft: [Y/n]
> Mark the change as a draft?
true
===
> Title: Add feature2 
> Short summary of the change
"Add feature2"
===
> Body: Press [e] to open mockedit or [enter/tab] to skip
> Open your editor to write a detailed description of the change
""
===
> Title: Add feature3 
> Short summary of the change
"Add feature3"
===
> Body: Press [e] to open mockedit or [enter/tab] to skip
> Open your editor to write a detailed description of the change
""

-- golden/draft-default.json --
{
  "number": 1,
  "state": "open",
  "title": "Add feature1",
  "draft": true,
  "body": "",
  "html_url": "$SHAMHUB_URL/alice/example/change/1",
  "head": {
    "repository": {
      "owner": "alice",
      "name": "example"
    },
    "ref": "feature1",
    "sha": "dbcf2133e568c7abf343166d32aefb2ecd3ec8be"
  },
  "base": {
    "repository": {
      "owner": "alice",
      "name": "example"
    },
    "ref": "main",
    "sha": "3bcbc80b165d8b4bb7fe792b7ca9effc713b32a5"
  }
}

-- golden/draft-override.json --
{
  "number": 2,
  "state": "open",
  "title": "Add feature2",
  "body": "",
  "html_url": "$SHAMHUB_URL/alice/example/change/2",
  "head": {
    "repository": {
      "owner": "alice",
      "name": "example"
    },
    "ref": "feature2",
    "sha": "ca0588e9603d29d74b9c81b8536be941e9a868f4"
  },
  "base": {
    "repository": {
      "owner": "alice",
      "name": "example"
    },
    "ref": "feature1",
    "sha": "dbcf2133e568c7abf343166d32aefb2ecd3ec8be"
  }
}

-- golden/draft-explicit.json --
{
  "number": 3,
  "state": "open",
  "title": "Add feature3",
  "draft": true,
  "body": "",
  "html_url": "$SHAMHUB_URL/alice/example/change/3",
  "head": {
    "repository": {
      "owner": "alice",
      "name": "example"
    },
    "ref": "feature3",
    "sha": "ae33cf76131b929e42f9e86d80f03aba22aea1b7"
  },
  "base": {
    "repository": {
      "owner": "alice",
      "name": "example"
    },
    "ref": "feature2",
    "sha": "ca0588e9603d29d74b9c81b8536be941e9a868f4"
  }
}
