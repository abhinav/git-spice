Usage: gs branch (b) split (sp) [flags]

Split a branch on commits

Splits the current branch into two or more branches at specific commits,
inserting the new branches into the stack at the positions of the commits.
Use the --branch flag to specify a different branch to split.

The command will prompt for commits to introduce splits at. Supply the --at flag
one or more times to split a branch without a prompt.

    --at COMMIT:NAME

Where COMMIT resolves to a commit per gitrevisions(7), and NAME is the name of
the new branch. For example:

    # split at a specific commit
    gs branch split --at 1234567:newbranch

    # split at the previous commit
    gs branch split --at HEAD^:newbranch

If the original branch is assigned to one of the splits, it is required to
provide a new name for the commit at HEAD. Fo example, if we have branch A with
three commits:

    ┌─ A
    │  abcdef1 Commit 3 (HEAD)
    │  bcdef12 Commit 2
    │  cdef123 Commit 1
    trunk

A split at commit 2 using the branch name "A" would require a new name to be
provided for commit 3.

Flags:
  --at=COMMIT:NAME,...    Commits to split the branch at.
  --branch=NAME           Branch to split commits of.

Global Flags:
  -h, --help           Show help for the command
      --version        Print version information and quit
  -v, --verbose        Enable verbose output ($GIT_SPICE_VERBOSE)
  -C, --dir=DIR        Change to DIR before doing anything
      --[no-]prompt    Whether to prompt for missing information
