---
version: 2
interactions:
    - id: 0
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 134
        transfer_encoding: []
        trailer: {}
        host: api.github.com
        remote_addr: ""
        request_uri: ""
        body: |
            {"query":"query($owner:String!$repo:String!){repository(owner: $owner, name: $repo){id}}","variables":{"owner":"golang","repo":"go"}}
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://api.github.com/graphql
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: '{"data":{"repository":{"id":"MDEwOlJlcG9zaXRvcnkyMzA5Njk1OQ=="}}}'
        headers:
            Content-Type:
                - application/json; charset=utf-8
        status: 200 OK
        code: 200
        duration: 198.453709ms
    - id: 1
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 167
        transfer_encoding: []
        trailer: {}
        host: api.github.com
        remote_addr: ""
        request_uri: ""
        body: |
            {"query":"query($name:String!$owner:String!){repository(owner: $owner, name: $name){pullRequestTemplates{filename,body}}}","variables":{"name":"go","owner":"golang"}}
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://api.github.com/graphql
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: '{"data":{"repository":{"pullRequestTemplates":[{"filename":"PULL_REQUEST_TEMPLATE","body":"This PR will be imported into Gerrit with the title and first\ncomment (this text) used to generate the subject and body of\nthe Gerrit change.\n\n**Please ensure you adhere to every item in this list.**\n\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\n\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\n  + The package name goes before the colon\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\n    \"This change modifies Go to ___________\"\n  + Lowercase verb after the colon\n  + No trailing period\n  + Keep the title as short as possible. ideally under 76 characters or shorter\n+ No Markdown\n+ The first PR comment (this one) is wrapped at 76 characters, unless it''s\n  really needed (ASCII art, table, or long link)\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\n  (the latter if this is not a complete fix) to this comment\n+ If referring to a repo other than `golang/go` you can use the\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\n+ We do not use Signed-off-by lines in Go. Please don''t add them.\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\n+ Delete these instructions once you have read and applied them\n"}]}}}'
        headers:
            Content-Type:
                - application/json; charset=utf-8
        status: 200 OK
        code: 200
        duration: 189.032875ms
