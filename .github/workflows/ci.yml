name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      name: Check out repository
    - uses: jdx/mise-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: mise run lint

  test:
    runs-on: ${{ matrix.os }}
    name: Test (${{ matrix.os}}, Git ${{ matrix.git-version }})

    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        git-version: ["system"]
        include:
          # On Linux, also test against specific versions built from source.
          - {os: ubuntu-latest, git-version: "2.38.0"}
          # On Windows, run without coverage.
          - {os: windows-latest, no-cover: true}

    steps:
    - uses: actions/checkout@v4
    - uses: jdx/mise-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Go cache
      uses: ./.github/actions/go-cache

    - name: Install Git
      uses: ./.github/actions/install-git
      if: matrix.git-version != 'system'
      with:
        version: ${{ matrix.git-version }}
    - name: Report Git version
      shell: bash
      run:
        git --version

    - name: Test
      run: >-  # join lines with spaces
        mise run
        ${{ (matrix.no-cover == true) && 'test' || 'cover' }}
        ${{ (matrix.os != 'windows-latest') && '--race' || '' }}
      # NB:
      # Windows tests are already slow.
      # Run them without race detection to avoid slowing them further.
      shell: bash
      env:
        GOTESTSUM_FORMAT: github-actions

    - name: Upload coverage
      uses: codecov/codecov-action@v5.4.2
      if: ${{ matrix.no-cover != true }}
      with:
        files: ./cover.out
        token: ${{ secrets.CODECOV_TOKEN }}

  # Depends on lint and test.
  # Stable name for branch protection to require
  # instead of adding lint and test there directly.
  ok:
    name: OK
    runs-on: ubuntu-latest
    needs: [lint, test]

    # Workaround for GitHub marking this job as skipped,
    # and allowing a bad PR to merge anyway.
    if: always()
    steps:
    - run: exit 1
      if: >-
        needs.lint.result != 'success' ||
        needs.test.result != 'success'

    - run: exit 0
